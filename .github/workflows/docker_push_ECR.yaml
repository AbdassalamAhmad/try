name: docker_push_ECR

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS User Credentials.
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS User Credentials.
  AWS_REGION: us-east-1


jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
      REGISTRY_ALIAS: g4x4w1s3
      REPOSITORY: abc
      IMAGE_TAG: ${{ github.sha }}
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to AWS ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1    
      with:
        registry-type: public
    
    - name: Build and push docker image

      run: |
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
      working-directory: ./Monty_Hall_Game_Flask_App

    - name: Deploy docker image to EC2
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: g4x4w1s3
        REPOSITORY: abc
        IMAGE_TAG: ${{ github.sha }}
        #AWS_DEFAULT_REGION: us-east-1
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_PUBLIC_IP }}
        username: ec2-user
        key: ${{ env.PRIVATE_SSH_KEY }}
        #envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
        script: |-
          sudo yum update -y
          sudo amazon-linux-extras install docker -y
          sudo service docker start
          sudo docker stop ECR-Container || true
          sudo docker rm ECR-Container || true
          sudo docker pull $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          sudo docker run -d --name ECR-Container -p 80:5000 $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
